# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-19 21:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('mandatory', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='FeatureSelectionScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_features', models.IntegerField()),
                ('score', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='GridSearchScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField(default=0.0)),
                ('y', models.FloatField(default=0.0)),
                ('score', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=500)),
                ('processed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_features', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('based_plan', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlan')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementPlanClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('measurement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlan')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementPlanFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('measurement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlan')),
                ('measurement_plan_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlanClass')),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlanFamily')),
            ],
        ),
        migrations.CreateModel(
            name='PredictionFrequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.IntegerField()),
                ('frequency', models.IntegerField()),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.Prediction')),
            ],
        ),
        migrations.CreateModel(
            name='SelectedFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested_measurement_plan_id', models.IntegerField(default=-1)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('execution_time', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SVCModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_file', models.CharField(max_length=200)),
                ('kernel', models.CharField(max_length=200)),
                ('C', models.FloatField(default=0.0)),
                ('gamma', models.FloatField(default=0.0)),
                ('decision_function_shape', models.CharField(max_length=200)),
                ('cache_size', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureSelection',
            fields=[
                ('file', models.CharField(max_length=200)),
                ('suggestion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tool.Suggestion')),
                ('n_samples', models.IntegerField()),
                ('n_features', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ModelSelection',
            fields=[
                ('best_score', models.FloatField(default=0.0)),
                ('svc_model', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tool.SVCModel')),
            ],
        ),
        migrations.AddField(
            model_name='suggestion',
            name='classifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.SVCModel'),
        ),
        migrations.AddField(
            model_name='suggestion',
            name='measurement_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlan'),
        ),
        migrations.AddField(
            model_name='prediction',
            name='svc_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.SVCModel'),
        ),
        migrations.AddField(
            model_name='measurementplan',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlanFamily'),
        ),
        migrations.AddField(
            model_name='measurementfile',
            name='measurement_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.MeasurementPlan'),
        ),
        migrations.AddField(
            model_name='feature',
            name='metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.Metric'),
        ),
        migrations.AddField(
            model_name='classofinterest',
            name='suggestion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.Suggestion'),
        ),
        migrations.AddField(
            model_name='selectedfeature',
            name='feature_selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.FeatureSelection'),
        ),
        migrations.AddField(
            model_name='gridsearchscore',
            name='model_selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.ModelSelection'),
        ),
        migrations.AddField(
            model_name='featureselectionscore',
            name='feature_selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.FeatureSelection'),
        ),
    ]
